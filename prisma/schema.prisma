generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  name            String?
  role            String?   @default("user")
  banned          Boolean?  @default(false)
  banReason       String?
  banExpires      DateTime?
  username        String    @unique
  displayUsername String
  address         String?
  graduationYear  Int?
  department      String?
  socials         Json?
  currentCompany  String?
  jobTitle        String?
  phone           String?
  emailVerified   Boolean   @default(false)
  image           String?
  createdAt       DateTime
  updatedAt       DateTime
  accounts        Account[]
  File            File[]
  sessions        Session[]

  @@map("user")
}

model File {
  id        String   @id @default(uuid())
  name      String
  size      Int
  type      String
  key       String
  category  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])

  @@map("file")
}

model Session {
  id             String   @id
  expiresAt      DateTime
  token          String   @unique
  createdAt      DateTime
  updatedAt      DateTime
  ipAddress      String?
  userAgent      String?
  impersonatedBy String?
  userId         String
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}
